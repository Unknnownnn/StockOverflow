{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aakansh\\\\Documents\\\\Git\\\\StockOverflow\\\\stockoverflow-react\\\\src\\\\pages\\\\Markets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\nimport '../styles/Markets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Markets = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [chartOptions, setChartOptions] = useState({\n    chart: {\n      type: 'candlestick',\n      height: 350,\n      background: '#2a2a2a',\n      foreColor: '#e0e0e0',\n      toolbar: {\n        show: true,\n        tools: {\n          download: true,\n          selection: true,\n          zoom: true,\n          zoomin: true,\n          zoomout: true,\n          pan: true,\n          reset: true\n        }\n      }\n    },\n    plotOptions: {\n      candlestick: {\n        colors: {\n          upward: '#00f962',\n          downward: '#ff5a55'\n        }\n      }\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        style: {\n          colors: '#e0e0e0'\n        }\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      },\n      labels: {\n        style: {\n          colors: '#e0e0e0'\n        }\n      }\n    },\n    grid: {\n      borderColor: '#333'\n    }\n  });\n  useEffect(() => {\n    // Function to generate realistic candlestick data\n    const generateCandlestickData = (basePrice, volatility, days) => {\n      const data = [];\n      let currentPrice = basePrice;\n      const today = new Date();\n      for (let i = days - 1; i >= 0; i--) {\n        const date = new Date(today);\n        date.setDate(date.getDate() - i);\n\n        // Generate random price movement with more realistic patterns\n        const open = currentPrice;\n        const change = (Math.random() - 0.5) * volatility;\n        const close = open * (1 + change);\n        const high = Math.max(open, close) * (1 + Math.random() * 0.005);\n        const low = Math.min(open, close) * (1 - Math.random() * 0.005);\n        data.push({\n          x: date.getTime(),\n          y: [open, high, low, close].map(price => Math.round(price * 100) / 100)\n        });\n        currentPrice = close;\n      }\n      return data;\n    };\n\n    // Define stocks with their base prices and volatility\n    const stockData = [{\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      basePrice: 170,\n      volatility: 0.02\n    }, {\n      symbol: 'MSFT',\n      name: 'Microsoft',\n      basePrice: 420,\n      volatility: 0.015\n    }, {\n      symbol: 'GOOGL',\n      name: 'Alphabet',\n      basePrice: 150,\n      volatility: 0.018\n    }, {\n      symbol: 'AMZN',\n      name: 'Amazon',\n      basePrice: 180,\n      volatility: 0.025\n    }, {\n      symbol: 'META',\n      name: 'Meta',\n      basePrice: 500,\n      volatility: 0.022\n    }, {\n      symbol: 'TSLA',\n      name: 'Tesla',\n      basePrice: 170,\n      volatility: 0.03\n    }];\n\n    // Generate data for each stock\n    const stocksWithData = stockData.map(stock => ({\n      ...stock,\n      data: generateCandlestickData(stock.basePrice, stock.volatility, 30),\n      currentPrice: 0,\n      change: 0,\n      changePercent: 0\n    }));\n\n    // Calculate current price and changes\n    stocksWithData.forEach(stock => {\n      const lastDay = stock.data[stock.data.length - 1];\n      const prevDay = stock.data[stock.data.length - 2];\n      stock.currentPrice = lastDay.y[3];\n      stock.change = lastDay.y[3] - prevDay.y[3];\n      stock.changePercent = stock.change / prevDay.y[3] * 100;\n    });\n    setStocks(stocksWithData);\n    setSelectedStock(stocksWithData[0]);\n  }, []);\n  const handleStockSelect = stock => {\n    setSelectedStock(stock);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markets-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stock Market Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-buttons\",\n        children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `stock-button ${(selectedStock === null || selectedStock === void 0 ? void 0 : selectedStock.symbol) === stock.symbol ? 'active' : ''}`,\n          onClick: () => handleStockSelect(stock),\n          children: stock.symbol\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), selectedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-stock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-symbol\",\n            children: selectedStock.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-name\",\n            children: selectedStock.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-price\",\n            children: [\"$\", selectedStock.currentPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `stock-change ${selectedStock.change >= 0 ? 'positive' : 'negative'}`,\n            children: [selectedStock.change >= 0 ? '▲' : '▼', \" $\", Math.abs(selectedStock.change).toFixed(2), \" (\", selectedStock.changePercent.toFixed(2), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: {\n              ...chartOptions,\n              title: {\n                text: `${selectedStock.symbol} - Last 30 Days`,\n                align: 'left',\n                style: {\n                  color: '#e0e0e0'\n                }\n              }\n            },\n            series: [{\n              data: selectedStock.data\n            }],\n            type: \"candlestick\",\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Markets, \"2yjF3EpWa5kzssfcsZnwhNz7mCI=\");\n_c = Markets;\nexport default Markets;\nvar _c;\n$RefreshReg$(_c, \"Markets\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","Markets","_s","stocks","setStocks","selectedStock","setSelectedStock","chartOptions","setChartOptions","chart","type","height","background","foreColor","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","plotOptions","candlestick","colors","upward","downward","xaxis","labels","style","yaxis","tooltip","enabled","grid","borderColor","generateCandlestickData","basePrice","volatility","days","data","currentPrice","today","Date","i","date","setDate","getDate","open","change","Math","random","close","high","max","low","min","push","x","getTime","y","map","price","round","stockData","symbol","name","stocksWithData","stock","changePercent","forEach","lastDay","length","prevDay","handleStockSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","toFixed","abs","options","title","text","align","color","series","_c","$RefreshReg$"],"sources":["C:/Users/Aakansh/Documents/Git/StockOverflow/stockoverflow-react/src/pages/Markets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\nimport '../styles/Markets.css';\n\nconst Markets = () => {\n  const [stocks, setStocks] = useState([]);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [chartOptions, setChartOptions] = useState({\n    chart: {\n      type: 'candlestick',\n      height: 350,\n      background: '#2a2a2a',\n      foreColor: '#e0e0e0',\n      toolbar: {\n        show: true,\n        tools: {\n          download: true,\n          selection: true,\n          zoom: true,\n          zoomin: true,\n          zoomout: true,\n          pan: true,\n          reset: true\n        }\n      }\n    },\n    plotOptions: {\n      candlestick: {\n        colors: {\n          upward: '#00f962',\n          downward: '#ff5a55'\n        }\n      }\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        style: {\n          colors: '#e0e0e0'\n        }\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      },\n      labels: {\n        style: {\n          colors: '#e0e0e0'\n        }\n      }\n    },\n    grid: {\n      borderColor: '#333'\n    }\n  });\n\n  useEffect(() => {\n    // Function to generate realistic candlestick data\n    const generateCandlestickData = (basePrice, volatility, days) => {\n      const data = [];\n      let currentPrice = basePrice;\n      const today = new Date();\n      \n      for (let i = days - 1; i >= 0; i--) {\n        const date = new Date(today);\n        date.setDate(date.getDate() - i);\n        \n        // Generate random price movement with more realistic patterns\n        const open = currentPrice;\n        const change = (Math.random() - 0.5) * volatility;\n        const close = open * (1 + change);\n        const high = Math.max(open, close) * (1 + Math.random() * 0.005);\n        const low = Math.min(open, close) * (1 - Math.random() * 0.005);\n        \n        data.push({\n          x: date.getTime(),\n          y: [open, high, low, close].map(price => Math.round(price * 100) / 100)\n        });\n        \n        currentPrice = close;\n      }\n      \n      return data;\n    };\n\n    // Define stocks with their base prices and volatility\n    const stockData = [\n      { symbol: 'AAPL', name: 'Apple Inc.', basePrice: 170, volatility: 0.02 },\n      { symbol: 'MSFT', name: 'Microsoft', basePrice: 420, volatility: 0.015 },\n      { symbol: 'GOOGL', name: 'Alphabet', basePrice: 150, volatility: 0.018 },\n      { symbol: 'AMZN', name: 'Amazon', basePrice: 180, volatility: 0.025 },\n      { symbol: 'META', name: 'Meta', basePrice: 500, volatility: 0.022 },\n      { symbol: 'TSLA', name: 'Tesla', basePrice: 170, volatility: 0.03 }\n    ];\n\n    // Generate data for each stock\n    const stocksWithData = stockData.map(stock => ({\n      ...stock,\n      data: generateCandlestickData(stock.basePrice, stock.volatility, 30),\n      currentPrice: 0,\n      change: 0,\n      changePercent: 0\n    }));\n\n    // Calculate current price and changes\n    stocksWithData.forEach(stock => {\n      const lastDay = stock.data[stock.data.length - 1];\n      const prevDay = stock.data[stock.data.length - 2];\n      stock.currentPrice = lastDay.y[3];\n      stock.change = lastDay.y[3] - prevDay.y[3];\n      stock.changePercent = (stock.change / prevDay.y[3]) * 100;\n    });\n\n    setStocks(stocksWithData);\n    setSelectedStock(stocksWithData[0]);\n  }, []);\n\n  const handleStockSelect = (stock) => {\n    setSelectedStock(stock);\n  };\n\n  return (\n    <div className=\"markets-page\">\n      <div className=\"container\">\n        <h1>Stock Market Overview</h1>\n        \n        <div className=\"stock-buttons\">\n          {stocks.map((stock, index) => (\n            <button\n              key={index}\n              className={`stock-button ${selectedStock?.symbol === stock.symbol ? 'active' : ''}`}\n              onClick={() => handleStockSelect(stock)}\n            >\n              {stock.symbol}\n            </button>\n          ))}\n        </div>\n\n        {selectedStock && (\n          <div className=\"selected-stock\">\n            <div className=\"stock-info\">\n              <div className=\"stock-symbol\">{selectedStock.symbol}</div>\n              <div className=\"stock-name\">{selectedStock.name}</div>\n              <div className=\"stock-price\">${selectedStock.currentPrice.toFixed(2)}</div>\n              <div className={`stock-change ${selectedStock.change >= 0 ? 'positive' : 'negative'}`}>\n                {selectedStock.change >= 0 ? '▲' : '▼'} ${Math.abs(selectedStock.change).toFixed(2)} ({selectedStock.changePercent.toFixed(2)}%)\n              </div>\n            </div>\n            <div className=\"chart-container\">\n              <Chart\n                options={{\n                  ...chartOptions,\n                  title: {\n                    text: `${selectedStock.symbol} - Last 30 Days`,\n                    align: 'left',\n                    style: {\n                      color: '#e0e0e0'\n                    }\n                  }\n                }}\n                series={[{\n                  data: selectedStock.data\n                }]}\n                type=\"candlestick\"\n                height={400}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Markets; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}