{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aakansh\\\\Documents\\\\Git\\\\StockOverflow\\\\stockoverflow-react\\\\src\\\\pages\\\\Markets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CandlestickChart from '../components/CandlestickChart';\nimport '../styles/Markets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Markets = () => {\n  _s();\n  const [dowJonesData, setDowJonesData] = useState([]);\n  const [nasdaqData, setNasdaqData] = useState([]);\n  const [indices, setIndices] = useState([]);\n  useEffect(() => {\n    // Generate sample data similar to markets.html\n    const generateCandlestickData = (count, basePrice) => {\n      const data = [];\n      let date = new Date();\n      for (let i = 0; i < count; i++) {\n        const open = basePrice + Math.random() * 100 - 50;\n        const close = open + Math.random() * 20 - 10;\n        const low = Math.min(open, close) - Math.random() * 10;\n        const high = Math.max(open, close) + Math.random() * 10;\n        data.push({\n          x: date.getTime(),\n          y: [open, high, low, close].map(price => Math.round(price * 100) / 100)\n        });\n        date.setDate(date.getDate() - 1);\n      }\n      return data.reverse();\n    };\n\n    // Set initial data\n    setDowJonesData(generateCandlestickData(30, 35000));\n    setNasdaqData(generateCandlestickData(30, 14000));\n\n    // Set market indices\n    const marketIndices = [{\n      symbol: \"S&P 500\",\n      basePrice: 4500\n    }, {\n      symbol: \"FTSE 100\",\n      basePrice: 7500\n    }, {\n      symbol: \"DAX\",\n      basePrice: 15000\n    }, {\n      symbol: \"Nikkei 225\",\n      basePrice: 28000\n    }, {\n      symbol: \"Hang Seng\",\n      basePrice: 20000\n    }].map(index => {\n      const data = generateCandlestickData(30, index.basePrice);\n      const currentPrice = data[data.length - 1].y[3];\n      const previousPrice = data[data.length - 2].y[3];\n      const change = currentPrice - previousPrice;\n      const changePercent = change / previousPrice * 100;\n      return {\n        ...index,\n        currentPrice,\n        change,\n        changePercent\n      };\n    });\n    setIndices(marketIndices);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markets-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Global Markets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          fontSize: '24px',\n          padding: '20px'\n        },\n        children: \"TEST ELEMENT - If you see this, the component is rendering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(CandlestickChart, {\n            data: dowJonesData,\n            title: \"Dow Jones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(CandlestickChart, {\n            data: nasdaqData,\n            title: \"NASDAQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Market Indices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-grid\",\n        children: indices.map((index, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-symbol\",\n            children: index.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-price\",\n            children: index.currentPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `stock-change ${index.change >= 0 ? 'positive' : 'negative'}`,\n            children: [index.change >= 0 ? '▲' : '▼', \" \", Math.abs(index.change).toFixed(2), \" (\", index.changePercent.toFixed(2), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Markets, \"FrOkiM9djxj2D2tbaQ705mPih7U=\");\n_c = Markets;\nexport default Markets;\nvar _c;\n$RefreshReg$(_c, \"Markets\");","map":{"version":3,"names":["React","useState","useEffect","CandlestickChart","jsxDEV","_jsxDEV","Markets","_s","dowJonesData","setDowJonesData","nasdaqData","setNasdaqData","indices","setIndices","generateCandlestickData","count","basePrice","data","date","Date","i","open","Math","random","close","low","min","high","max","push","x","getTime","y","map","price","round","setDate","getDate","reverse","marketIndices","symbol","index","currentPrice","length","previousPrice","change","changePercent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","padding","title","toFixed","abs","_c","$RefreshReg$"],"sources":["C:/Users/Aakansh/Documents/Git/StockOverflow/stockoverflow-react/src/pages/Markets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CandlestickChart from '../components/CandlestickChart';\r\nimport '../styles/Markets.css';\r\n\r\nconst Markets = () => {\r\n  const [dowJonesData, setDowJonesData] = useState([]);\r\n  const [nasdaqData, setNasdaqData] = useState([]);\r\n  const [indices, setIndices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Generate sample data similar to markets.html\r\n    const generateCandlestickData = (count, basePrice) => {\r\n      const data = [];\r\n      let date = new Date();\r\n      for (let i = 0; i < count; i++) {\r\n        const open = basePrice + Math.random() * 100 - 50;\r\n        const close = open + Math.random() * 20 - 10;\r\n        const low = Math.min(open, close) - Math.random() * 10;\r\n        const high = Math.max(open, close) + Math.random() * 10;\r\n        data.push({\r\n          x: date.getTime(),\r\n          y: [open, high, low, close].map(price => Math.round(price * 100) / 100)\r\n        });\r\n        date.setDate(date.getDate() - 1);\r\n      }\r\n      return data.reverse();\r\n    };\r\n\r\n    // Set initial data\r\n    setDowJonesData(generateCandlestickData(30, 35000));\r\n    setNasdaqData(generateCandlestickData(30, 14000));\r\n\r\n    // Set market indices\r\n    const marketIndices = [\r\n      { symbol: \"S&P 500\", basePrice: 4500 },\r\n      { symbol: \"FTSE 100\", basePrice: 7500 },\r\n      { symbol: \"DAX\", basePrice: 15000 },\r\n      { symbol: \"Nikkei 225\", basePrice: 28000 },\r\n      { symbol: \"Hang Seng\", basePrice: 20000 }\r\n    ].map(index => {\r\n      const data = generateCandlestickData(30, index.basePrice);\r\n      const currentPrice = data[data.length - 1].y[3];\r\n      const previousPrice = data[data.length - 2].y[3];\r\n      const change = currentPrice - previousPrice;\r\n      const changePercent = (change / previousPrice) * 100;\r\n      \r\n      return {\r\n        ...index,\r\n        currentPrice,\r\n        change,\r\n        changePercent\r\n      };\r\n    });\r\n\r\n    setIndices(marketIndices);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"markets-page\">\r\n      <div className=\"container\">\r\n        <h1>Global Markets</h1>\r\n        <div style={{ color: 'red', fontSize: '24px', padding: '20px' }}>\r\n          TEST ELEMENT - If you see this, the component is rendering\r\n        </div>\r\n        <div className=\"charts-row\">\r\n          <div className=\"chart-wrapper\">\r\n            <CandlestickChart data={dowJonesData} title=\"Dow Jones\" />\r\n          </div>\r\n          <div className=\"chart-wrapper\">\r\n            <CandlestickChart data={nasdaqData} title=\"NASDAQ\" />\r\n          </div>\r\n        </div>\r\n        \r\n        <h2>Market Indices</h2>\r\n        <div className=\"stock-grid\">\r\n          {indices.map((index, i) => (\r\n            <div key={i} className=\"stock-card\">\r\n              <div className=\"stock-symbol\">{index.symbol}</div>\r\n              <div className=\"stock-price\">{index.currentPrice.toFixed(2)}</div>\r\n              <div className={`stock-change ${index.change >= 0 ? 'positive' : 'negative'}`}>\r\n                {index.change >= 0 ? '▲' : '▼'} {Math.abs(index.change).toFixed(2)} ({index.changePercent.toFixed(2)}%)\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Markets; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;MACpD,MAAMC,IAAI,GAAG,EAAE;MACf,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;MACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,EAAEK,CAAC,EAAE,EAAE;QAC9B,MAAMC,IAAI,GAAGL,SAAS,GAAGM,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;QACjD,MAAMC,KAAK,GAAGH,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;QAC5C,MAAME,GAAG,GAAGH,IAAI,CAACI,GAAG,CAACL,IAAI,EAAEG,KAAK,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;QACtD,MAAMI,IAAI,GAAGL,IAAI,CAACM,GAAG,CAACP,IAAI,EAAEG,KAAK,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;QACvDN,IAAI,CAACY,IAAI,CAAC;UACRC,CAAC,EAAEZ,IAAI,CAACa,OAAO,CAAC,CAAC;UACjBC,CAAC,EAAE,CAACX,IAAI,EAAEM,IAAI,EAAEF,GAAG,EAAED,KAAK,CAAC,CAACS,GAAG,CAACC,KAAK,IAAIZ,IAAI,CAACa,KAAK,CAACD,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;QACxE,CAAC,CAAC;QACFhB,IAAI,CAACkB,OAAO,CAAClB,IAAI,CAACmB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAClC;MACA,OAAOpB,IAAI,CAACqB,OAAO,CAAC,CAAC;IACvB,CAAC;;IAED;IACA7B,eAAe,CAACK,uBAAuB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACnDH,aAAa,CAACG,uBAAuB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;;IAEjD;IACA,MAAMyB,aAAa,GAAG,CACpB;MAAEC,MAAM,EAAE,SAAS;MAAExB,SAAS,EAAE;IAAK,CAAC,EACtC;MAAEwB,MAAM,EAAE,UAAU;MAAExB,SAAS,EAAE;IAAK,CAAC,EACvC;MAAEwB,MAAM,EAAE,KAAK;MAAExB,SAAS,EAAE;IAAM,CAAC,EACnC;MAAEwB,MAAM,EAAE,YAAY;MAAExB,SAAS,EAAE;IAAM,CAAC,EAC1C;MAAEwB,MAAM,EAAE,WAAW;MAAExB,SAAS,EAAE;IAAM,CAAC,CAC1C,CAACiB,GAAG,CAACQ,KAAK,IAAI;MACb,MAAMxB,IAAI,GAAGH,uBAAuB,CAAC,EAAE,EAAE2B,KAAK,CAACzB,SAAS,CAAC;MACzD,MAAM0B,YAAY,GAAGzB,IAAI,CAACA,IAAI,CAAC0B,MAAM,GAAG,CAAC,CAAC,CAACX,CAAC,CAAC,CAAC,CAAC;MAC/C,MAAMY,aAAa,GAAG3B,IAAI,CAACA,IAAI,CAAC0B,MAAM,GAAG,CAAC,CAAC,CAACX,CAAC,CAAC,CAAC,CAAC;MAChD,MAAMa,MAAM,GAAGH,YAAY,GAAGE,aAAa;MAC3C,MAAME,aAAa,GAAID,MAAM,GAAGD,aAAa,GAAI,GAAG;MAEpD,OAAO;QACL,GAAGH,KAAK;QACRC,YAAY;QACZG,MAAM;QACNC;MACF,CAAC;IACH,CAAC,CAAC;IAEFjC,UAAU,CAAC0B,aAAa,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElC,OAAA;IAAK0C,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3B3C,OAAA;MAAK0C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB3C,OAAA;QAAA2C,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/C,OAAA;QAAKgD,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,QAAQ,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAR,QAAA,EAAC;MAEjE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/C,OAAA;QAAK0C,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3C,OAAA;UAAK0C,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5B3C,OAAA,CAACF,gBAAgB;YAACc,IAAI,EAAET,YAAa;YAACiD,KAAK,EAAC;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACN/C,OAAA;UAAK0C,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5B3C,OAAA,CAACF,gBAAgB;YAACc,IAAI,EAAEP,UAAW;YAAC+C,KAAK,EAAC;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/C,OAAA;QAAA2C,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/C,OAAA;QAAK0C,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBpC,OAAO,CAACqB,GAAG,CAAC,CAACQ,KAAK,EAAErB,CAAC,kBACpBf,OAAA;UAAa0C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACjC3C,OAAA;YAAK0C,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEP,KAAK,CAACD;UAAM;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClD/C,OAAA;YAAK0C,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEP,KAAK,CAACC,YAAY,CAACgB,OAAO,CAAC,CAAC;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClE/C,OAAA;YAAK0C,SAAS,EAAE,gBAAgBN,KAAK,CAACI,MAAM,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;YAAAG,QAAA,GAC3EP,KAAK,CAACI,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAACvB,IAAI,CAACqC,GAAG,CAAClB,KAAK,CAACI,MAAM,CAAC,CAACa,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACjB,KAAK,CAACK,aAAa,CAACY,OAAO,CAAC,CAAC,CAAC,EAAC,IACvG;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GALEhC,CAAC;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7C,EAAA,CApFID,OAAO;AAAAsD,EAAA,GAAPtD,OAAO;AAsFb,eAAeA,OAAO;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}